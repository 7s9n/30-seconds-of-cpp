# All Functions

### ``<algorithm>``
<details>
<summary>View Contents </summary>
<ol>
    <li><a href="#all_of"><code>all_of</code></a></li>
    <li><a href="#any_of"><code>any_of</code></a></li>
    <li><a href="#none_of"><code>none_of</code></a></li>
    <li><a href="#for_each"><code>for_each</code></a></li>
    <li><a href="#for_each_n"><code>for_each_n</code></a></li>
    <li><a href="#count"><code>count</code></a></li>
    <li><a href="#count_if"><code>count_if</code></a></li>
    <li><a href="#mismatch"><code>mismatch</code></a></li>
    <li><a href="#equal"><code>equal</code></a></li>
    <li><a href="#find"><code>find</code></a></li>
    <li><a href="#find_if"><code>find_if</code></a></li>
    <li><a href="#find_if_not"><code>find_if_not</code></a></li>
    <li><a href="#find_end"><code>find_end</code></a></li>
    <li><a href="#find_first_of"><code>find_first_of</code></a></li>
    <li><a href="#adjacent_find"><code>adjacent_find</code></a></li>
    <li><a href="# "><code>adjacent_difference</code></a>
    <li><a href="#search"><code>search</code></a></li>
    <li><a href="#search_n"><code>search_n</code></a></li>
    <li><a href="#copy"><code>copy</code></a></li>
    <li><a href="#copy_if"><code>copy_if</code></a></li>
    <li><a href="#copy_n"><code>copy_n</code></a></li>
    <li><a href="#copy_backward"><code>copy_backward</code></a></li>
    <li><a href="#move"><code>move</code></a></li>
    <li><a href="#move_backward"><code>move_backward</code></a></li>
    <li><a href="#fill"><code>fill</code></a></li>
    <li><a href="#fill_n"><code>fill_n</code></a></li>
    <li><a href="#transform"><code>transform</code></a></li>
    <li><a href="#generate"><code>generate</code></a></li>
    <li><a href="#generate_n"><code>generate_n</code></a></li>
    <li><a href="#remove"><code>remove</code></a></li>
    <li><a href="#remove_if"><code>remove_if</code></a></li>
    <li><a href="#remove_copy"><code>remove_copy</code></a></li>
    <li><a href="#remove_copy_if"><code>remove_copy_if</code></a></li>
    <li><a href="#replace"><code>replace</code></a></li>
    <li><a href="#replace_if"><code>replace_if</code></a></li>
    <li><a href="#replace_copy"><code>replace_copy</code></a></li>
    <li><a href="#replace_copy_if"><code>replace_copy_if</code></a></li>
    <li><a href="#swap"><code>swap</code></a></li>
    <li><a href="#swap_ranges"><code>swap_ranges</code></a></li>
    <li><a href="#iter_swap"><code>iter_swap</code></a></li>
    <li><a href="#reverse"><code>reverse</code></a></li>
    <li><a href="# "><code>reverse_copy</code></a></li>
    <li><a href="# "><code>rotate</code></a></li>
    <li><a href="# "><code>rotate_copy</code></a></li>
    <li><a href="# "><code>random_shuffle</code></a></li>
    <li><a href="# "><code>shuffle</code></a></li>
    <li><a href="# "><code>unique</code></a></li>
    <li><a href="# "><code>unique_copy</code></a></li>
    <li><a href="# "><code>is_partitioned</code></a></li>
    <li><a href="# "><code>partition</code></a></li>
    <li><a href="# "><code>partition_copy</code></a></li>
    <li><a href="# "><code>stable_partition</code></a></li>
    <li><a href="# "><code>partition_point</code></a></li>
    <li><a href="# "><code>is_sorted</code></a></li>
    <li><a href="# "><code>is_sorted_until</code></a></li>
    <li><a href="#sort"><code>sort</code></a></li>
    <li><a href="# "><code>partial_sort</code></a></li>
    <li><a href="# "><code>partial_sort_copy</code></a></li>
    <li><a href="# "><code>stable_sort</code></a></li>
    <li><a href="# "><code>nth_element</code></a></li>
    <li><a href="# "><code>lower_bound</code></a></li>
    <li><a href="# "><code>upper_bound</code></a></li>
    <li><a href="#binary_search"><code>binary_search</code></a></li>
    <li><a href="# "><code>equal_range</code></a></li>
    <li><a href="# "><code>merge</code></a></li>
    <li><a href="# "><code>inplace_merge</code></a></li>
    <li><a href="# "><code>includes</code></a></li>
    <li><a href="# "><code>set_difference</code></a></li>
    <li><a href="# "><code>set_intersection</code></a></li>
    <li><a href="# "><code>set_symmetric_difference</code></a></li>
    <li><a href="# "><code>set_union</code></a></li>
    <li><a href="# "><code>is_heap</code></a></li>
    <li><a href="# "><code>is_heap_until</code></a></li>
    <li><a href="# "><code>make_heap</code></a></li>
    <li><a href="# "><code>push_heap</code></a></li>
    <li><a href="# "><code>pop_heap</code></a></li>
    <li><a href="# "><code>sort_heap</code></a></li>
    <li><a href="#"><code>clamp</code></a></li>
    <li><a href="#"><code>max</code></a></li>
    <li><a href="#"><code>max_element</code></a></li>
    <li><a href="#"><code>min</code></a></li>
    <li><a href="#"><code>min_element</code></a></li>
    <li><a href="#"><code>minimax</code></a></li>
    <li><a href="#"><code>minimax_element</code></a></li>
    <li><a href="#"><code>lexicographical_compare</code></a></li>
    <li><a href="#"><code>is_permutation</code></a></li>
    <li><a href="#"><code>next_permutation</code></a></li>
    <li><a href="#"><code>prev_permutation</code></a>
    <li><a href="#"><code>sample</code></a>
    <li><a href="#"><code>destroy</code></a>
    <li><a href="#"><code>uninitialized_copy</code></a>
    <li><a href="#"><code>uninitialized_fill</code></a>
    <li><a href="#"><code>uninitialized_move</code></a>
    <li><a href="#"><code>uninitialized_default_construct</code></a>
    <li><a href="#"><code>uninitialized_value_construct</code></a>
    <li><a href="#"><code>iota</code></a>
    <li><a href="#"><code>partial_sum</code></a>
    <li><a href="#"><code>inclusive_scan</code></a>
    <li><a href="#"><code>exclusive_scan</code></a>
    <li><a href="#"><code>reduce</code></a>
    <li><a href="#"><code>transform_reduce</code></a>
    <li><a href="#"><code>transform_inclusive_scan</code></a>
    <li><a href="#"><code>transform_exclusive_scan</code></a>
    <li><a href="#"><code>inner_product</code></a>
    <li><a href="#"><code>accumulate</code></a>
</details>
</ol>